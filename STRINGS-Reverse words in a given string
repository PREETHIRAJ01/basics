Given a String of length S, reverse the whole string without reversing the individual words in it.
Words are separated by dots.

Input:
The first line contains T denoting the number of testcases.
T testcases follow. Each case contains a string S containing characters.

Output:
For each test case, in a new line, output a single line containing the reversed String.

Constraints:
1 <= T <= 100
1 <= |S| <= 2000

Example:
Input:
2
i.like.this.program.very.much
pqr.mno

Output:
much.very.program.this.like.i
mno.pqr



-----------------------------------------------------------------------------------------
hint:
first reverse the individual words, we get the below string.
     "i ekil siht margorp yrev hcum"
next reverse the whole string from start to end and you get the desired output.
     "much very program this like i"


code:(execution time--0.01 sec)
#include <stdio.h>
#include<string.h>
int main()
{
	int t;
	scanf("%d",&t);
	int i;
	while(t--)
	{
	    char s[2000];
	    scanf("%s",s);
	    char s1[20][1000];
	    int j=0,k=0,h;
	    for(i=0;i<strlen(s);i++)
	    {
	        if((s[i]>='a' && s[i]<='z') || (s[i]>='A' && s[i]<='Z') || (s[i]>='0' && s[i]<='9'))
	        {
	           s1[k][j++]=s[i]; 
	        }
	        s1[k][j]='\0';
	        if(s[i]=='.' && ((s[i+1]>='a' && s[i+1]<='z') || (s[i+1]>='A' && s[i+1]<='Z') ||
	        (s[i+1]>='0' && s[i+1]<='9')))
	        {
	            s1[k++][j];
	            j=0;
	        }
	    }
	    for(i=0;i<=k;i++)
	    {
	        for(j=0;j<strlen(s1[i])/2;j++)
	        {
	            char temp=s1[i][j];
	            s1[i][j]=s1[i][strlen(s1[i])-j-1];
	            s1[i][strlen(s1[i])-j-1]=temp;
	        }
	    }
	    for(i=k;i>=0;i--)
	    {
	        for(j=strlen(s1[i])-1;j>=0;j--)
	        {
	        printf("%c",s1[i][j]);
	        }
	        if(i!=0)
	        {
	        printf(".");
	        }
	        
	    }
	    
	    printf("\n");
	}
	return 0;
}
