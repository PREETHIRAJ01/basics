You are given an array A, of N elements. You need to find minimum distance between given two integers x and y.

Distance: The distance (index-based) between two elements of the array.

Input Format:
The first line of input contains an integer T, denoting the number of test cases. Then T test cases follow. Each test case consists of three lines. The first line of each test case contains an integer N denoting size array. Then in the next line are N space separated values of the array A. The last line of each test case contains two integers  x and y.

Output Format:
For each test case, print the required answer .

Your Task:
Your task is to complete the function minDist which returns  
an integer denoting the minimum distance between two integers x and y in the array.
If no such distance is possible then return -1.

Constraints:
1 <= T <= 100
1 <= N <= 105
1 <= A, x, y <= 105

Example:
Input:
2
4
1 2 3 2
1 2
7
86 39 90 67 84 66 62 
42 12
Output:
1
-1

Explanation:
Testcase1: x = 1 and y = 2. There are two distances between x and y, which are 1 and 3 out of which the minDistance between x and y is 1.
Testcase2: x = 42 and y = 12. We return -1 as the x and y don't exist in the array.



code:(my code)
long long minDist(long long arr[], long long n, long long x, long long y)
{
    int min=10000,startindex,endindex,flag=0;
     for(int i=0;i<n;i++)
     {
         if(arr[i]==x)
         {
             startindex=i;
         }
         if(arr[i]==y)
         {
             endindex=i;
         }
         
         if(abs(startindex-endindex)<min)
         {
             flag=1;
             min=abs(startindex-endindex);
         }
         
         }
         if(flag==1)
         return min;
         if(flag==0)
         return -1;
         
         
         
}


java code:(thanks to geeks for geeks)
class GfG {
    long minDist(long a[], long n, long x, long y) {
        int recent_x = -1;
        int recent_y = -1;
        int ans = 9999999;

        for (int i = 0; i < n; i++) {
            if (a[i] == x) {
                recent_x = i;

                // Checking both recent X and Y is found in the array or not
                if (recent_y != -1)
                    ans = Math.min(Math.abs(recent_x - recent_y), ans);
            } else if (a[i] == y) {
                recent_y = i;

                // Checking both recent X and Y is found in the array or not
                if (recent_x != -1)
                    ans = Math.min(Math.abs(recent_x - recent_y), ans);
            }
        }

        // If ans is not updated then either x or y, or both are not present in
        // the array
        if (ans == 9999999) return -1;
        return ans;
    }
}
