Given a number N, calculate the prime numbers upto N using Sieve of Eratosthenes.  

Input: 
The first line of the input contains T denoting the number of testcases. 
T testcases follow. Each testcase contains one line of input containing N.

Output: 
For all testcases, in a new line, print all the prime numbers upto or equal to N.

Constraints:
1 <= T<= 100
1 <= N <= 104

Example:
Input:
2
10
35
Output:
2 3 5 7
2 3 5 7 11 13 17 19 23 29 31 


code:
SIEVE OF ERATOSTHENES

int main() 
{
	long long int t;
	scanf("%lld",&t);
	long long int n;
	while(t--)
	{
	    scanf("%lld",&n);
	    int a[n],i,j;
	    for(i=2;i<=n;i++)
	    {
	        a[i]=1;
	    }
	    for(i=2;i<=n;i++)
	    {
	        for(j=i;i*j<=n;j++)
	        {
	            a[i*j]=0;
	        }
	    }
	    for(i=2;i<=n;i++)
	    {
	        if(a[i])
	        {
	            printf("%lld ",i);
	        }
	    }
	    printf("\n");
	}
	return 0;
}
