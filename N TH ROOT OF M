You are given 2 numbers (N , M); the task is to find NâˆšM (Nth root of M).

Input:
The first line of input contains an integer T denoting the number of test cases. Then T test cases follow. Each test case contains two space separated integers N and M.

Output:
For each test case, in a new line, print an integer denoting Nth root of M if the root is an integer else print -1.

Constraints:
1 <= T <= 200
2 <= N <= 20
1 <= M <= 109+5

Example:
Input:
2
2 9
3 9
Output:
3
-1
code:


#include <stdio.h>
#include<math.h>

int main()
{
    int t;
    scanf("%d",&t);
    int n,x;
    while(t--)
    {
        scanf("%d%d",&n,&x);
            int  res = (int)round(pow(x,1.0/n));
	        if(pow(res,n)==x)
	        printf("%d\n",(res));
	        else
	        printf("-1\n");
    }
	return 0;
}
