Input data containing N countries and their capital will be provided as input.
The program must then print the capital for a given country.
Input Format:First line will contain the integer value N representing how many 
country-capital pairs are to be provided as input.Next N lines will contain the name of the country 
and the name of the captial as string values separated by a space.The last line will contain the name
of the country as a string value for which the capital is to be printed as output.
Output Format:First line will contain the capital of the country.
If the name of the country is NOT found in the input data then NONE must be printed as output.
Constraints:N will be from 2 to 100.
Sample Input/Output:Example 1:
Input:
5
Afghanistan Kabul
Austria Vienna
Armenia Yerevan
Chile Santiago
Croatia Zagreb
Austria
Output:
Vienna
Example 2:
Input:
4
Armenia Yerevan
Chile Santiago
Croatia Zagreb
Iran Tehran
Japan
Output:NONE
Explanation:
As Japan is not mentioned in the input data, NONE is printed as output.
Max Execution Time Limit: 5000 millisecsC ( gcc 8.x)








code1:
#include<stdio.h>
#include <stdlib.h>
int main()
{
int n,i=0,flag=0;
scanf("%d",&n);
char s1[n][100],s2[n][100];
for(i=0;i<n;i++)
{
scanf("%s %s",s1[i],s2[i]);
}
char a[100]; 
scanf("%s",a); 
for(i=0;i<n;i++) 
{
if(strcmp(s1[i],a)==0)
{
flag=1;
break;
}
}
if(flag==1)
{
printf("%s",s2[i]);
}
if(flag==0)
{
printf("NONE");
}
}



code2:
#include <stdio.h>
struct CountryCapital
{
char country[100]; 
char capital[100];
};
int main()
{
int N; 
scanf("%d",&N); 
char country[100];
char capital[100]; 
struct CountryCapital list[N];
int index=0;
while(index < N)
{
scanf("%s %s",country,capital);
strcpy(list[index].country,country); 
strcpy(list[index].capital,capital);
index++; 
}
char countryforcapital[100];
scanf("%s",countryforcapital);
index=0;
while(index < N) 
{
if( strcmp(list[index].country,countryforcapital) == 0 )
{
puts(list[index].capital);
return 0;
}
index++; 
}
printf("NONE");
}
