Print a sequence of numbers starting with N, without using loop, in which  A[i+1] = A[i] - 5,  
if  A[i]>0, else A[i+1]=A[i] + 5  repeat it until A[i]=N.

Input:
The first line contains an integer T, number of test cases. Then following T lines contains an integer N.

Output:
For each test case, print the pattern in newline with space separated integers.

Constraints:
0< N < 10000

Example:
Input:
2
16
10
Output: 
16 11 6 1 -4 1 6 11 16
10 5 0 5 10

Explanation:
We basically first reduce 5 one by one until we reach a negative or 0. After we reach 0 or negative,
we one by one add 5 until we reach N.






CODE:(WITHOUT RECURSION)
#include<stdio.h>

int main()
{
    int t;
    scanf("%d",&t);
    int n;
    while(t--)
    {
        scanf("%d",&n);
        int temp=n;
        while(n)
        {
            printf("%d ",n);
            if(n<=0)
            {
            break;
            }
            
            n=n-5;
        }
        if(n==0)
        {
            printf("%d ",n);
        }
        while(n<=temp)
        {
            
            n=n+5;
            printf("%d ",n);
            if(n==temp)
            break;
        }
        
    printf("\n");
    }
}
with recursion:
#include<stdio.h>
int pattern(int n)
{
    if(n>0)
    {
      printf("%d ",n);
      pattern(n-5);
      printf("%d ",n);
    }
    else
    printf("%d ",n);

}
int main()
{
    int t;
    scanf("%d",&t);
    int n;
    while(t--)
    {
        scanf("%d",&n);
        pattern(n);
        printf("\n");
        
    }
}
