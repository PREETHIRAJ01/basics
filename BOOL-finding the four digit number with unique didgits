 find any four digit number fascinating that has all the 
4
 digits unique. For example 
1234
 is a fascinating number. His friend Rahul gave him N numbers and asks him to find the minimum number which is strictly larger than the given one and has only distinct digits.

Input format
The first line of the input contains integer 
N
, denoting the count of numbers provided by Rahul.
Each of the next 
N
 lines contains one integer.

Output format
Print the next fascinating number.

Constraints
1
<=
N
<=
10

1000
<=
n
u
m
b
e
r
<=
9000

Time Limit
1
 second

Example
Input
2

1234

2010

Output
1235

2013

Sample test case explanation
1235
 is the minimum number that is larger than 
1234
 with all 
4
 digits 
1
,
2
,
3
,
5
 distinct.







#include <stdio.h>
#include<stdbool.h>

int checkdistinct(int num)
{
     bool visited[10]={false};
     while(num)
     {
       if(visited[num%10])
       break;
       
       visited[num%10]=true;
       num=num/10;
     }
      if(num==0)
      return 1;
      else 
      return 0;
}

int main()
{
  
   int t;
   scanf("%d",&t);
   while(t--)
   {
     int n;
     scanf("%d",&n);
     int i;
     for(i=n+1;i<10000;i++)
     {
        int f=checkdistinct(i);
        if(f==1)
        {
          printf("%d\n",i);
          break;
        }
     }
   }
   return 0;
}

or
#include <stdio.h>
#include<stdbool.h>

#include <stdio.h>


int checkdistinct(int num)
{
  int a,b,c,d;
  a=num%10;
  num=num/10;
  b=num%10;
  num=num/10;
  c=num%10;
  num=num/10;
  d=num%10;
  num=num/10;
 // printf("%d %d %d %d %d\n",a,b,c,d,num);
  if( (a!=b && b!=c) && (c!=d &&  d!=a) && (a!=c && b!=d))
  {
    return 1;
  }
  return 0;
}

int main()
{
  
   int t;
   scanf("%d",&t);
   while(t--)
   {
     int n;
     scanf("%d",&n);
     int i;
     for(i=n+1;i<10000;i++)
     {
        int f=checkdistinct(i);
        if(f==1)
        {
          printf("%d\n",i);
          break;
        }
     }
   }
}

