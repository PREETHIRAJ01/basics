Given an array A[] of integers, sort the array according to frequency of elements. That is elements that have higher frequency come first. If frequencies of two elements are same, then smaller number comes first.

Input:
The first line of input contains an integer T denoting the number of test cases. 
The description of T test cases follows. The first line of each test case contains a single integer N denoting the size of array. 
The second line contains N space-separated integers A1, A2, ..., AN denoting the elements of the array.

Output:
For each testcase, in a new line, print each sorted array in a seperate line.
For each array its numbers should be seperated by space.

Constraints:
1 ≤ T ≤ 70
30 ≤ N ≤ 130
1 ≤ Ai ≤ 60 

Example:
Input:
2
5
5 5 4 6 4
5
9 9 9 2 5

Output:
4 4 5 5 6
9 9 9 2 5

Explanation:
Testcase1: The highest frequency here is 2. Both 5 and 4 have that frequency. Now since the frequencies are same then smaller element comes first. So 4 4 comes first then comes 5 5. Finally comes 6.
The output is 4 4 5 5 6.

Testcase2: The highest frequency here is 3. The element 9 has the highest frequency. So 9 9 9 comes first. Now both 2 and 5 have same frequency. So we print smaller element first.
The output is 9 9 9 2 5.
 


my approach:
1.get the iput from the user
2.create three arrays
a[n]-->store the input
f[60]-->frequency array
b[n]-->array to store the elements from the input array a[n] without duplicates
max=0

3.calculate the max value when you get the iput from user.

4. find the frequrency of elements store it in f[60] array
    f[a[i]]
    
5. now storing elements in b[n] array
   k=0;
   run a loop from i=0 to i=max
        if(f[i])
        {
        b[k++]=i;
        }
    if the frequency value exits store it the corresponding i value in b array
6.sorting takes place in b array:
      for(i=0;i<k;i++)
        {
            for(j=i+1;j<k;j++)
            {
                if(f[b[i]]==f[b[j]])
               {
                   if(b[i]>b[j])
                   {
                       temp1=b[i];
                       b[i]=b[j];
                       b[j]=temp1;
                       
                   }
                 }
               
                
               if(f[b[i]]<f[b[j]])  
               {
                   
                   temp1=b[i];
                   b[i]=b[j];
                   b[j]=temp1;
               }
            }
        }
7. print the values based on frequency:


CODE:
#include<stdio.h>

int main()
{
    int t;
    scanf("%d",&t);
    while(t--)
    {
        int n;
        scanf("%d",&n);
        int a[n],i;
        int f[60]={0},max=0,k=0,b[n],j,temp1,temp;
        for(i=0;i<n;i++)
        {
            scanf("%d",&a[i]);
            f[a[i]]++;
            if(a[i]>max)
            max=a[i];
        }
        
        for(i=0;i<=max;i++)
        {
            if(f[i])
            {
                b[k++]=i;
            }
        }
        for(i=0;i<k;i++)
        {
            for(j=i+1;j<k;j++)
            {
                if(f[b[i]]==f[b[j]])
               {
                   if(b[i]>b[j])
                   {
                       temp1=b[i];
                       b[i]=b[j];
                       b[j]=temp1;
                       
                   }
                 }
               
                
               if(f[b[i]]<f[b[j]])  
               {
                   
                   temp1=b[i];
                   b[i]=b[j];
                   b[j]=temp1;
               }
            }
        }
        for(i=0;i<k;i++)
        {
            for(j=0;j<f[b[i]];j++)
            {
               printf("%d ",b[i]);
            }
        }
        printf("\n");
        
        
    }
}
