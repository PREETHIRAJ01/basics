A number is said to be twisted prime if it is a prime number and reverse of the number is also a prime number.

Input:
The first line of input contains an integer T denoting the number of test cases. 
The first and last line of each test case consists of an integer n.  

Output:
Print the answer in "Yes" or "No".

Constraints: 
1<=T<=100
2<=n<=100000

Example:
Input:
2
97
43

Output:
Yes
No






code:
#include <stdio.h>
#include <math.h>
int prime(int no)
{
    int i;
    for(i=2;i<=sqrt(no);i++)
    {
        if(no%i==0)
        {
            return 0;
        }
    }
    return 1;
}


int main()
{
	 int t;
	 scanf("%d",&t);
	 while(t--)
	 {
	     int n;
	     scanf("%d",&n);
	     int f1,f2;
	     int temp=n,rev=0;
	     while(n!=0)
	     {
	         rev=rev*10+(n%10);
	         n=n/10;
	     }
	      f1=prime(temp);
	      f2=prime(rev);
	      if(f1==1 && f2==1)
	      {
	          printf("Yes\n");
	      }
	      else
	      {
	          printf("No\n");
	      }
	 }
	return 0;
}
