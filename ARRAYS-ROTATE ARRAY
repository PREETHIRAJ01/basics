Given an unsorted array arr[] of size N, rotate it by D elements (clockwise). 

Input:
The first line of the input contains T denoting the number of testcases.
First line of eacg test case contains two space separated elements, 
N denoting the size of the array and an integer D denoting the number size of the rotation. 
Subsequent line will be the N space separated array elements.

Output: 
For each testcase, in a new line, output the rotated array.

Constraints:
1 <= T <= 200
1 <= N <= 10^7
1 <= D <= N
0 <= arr[i] <= 105

Example:
Input:
2
5 2
1 2 3 4 5 
10 3
2 4 6 8 10 12 14 16 18 20

Output:
3 4 5 1 2
8 10 12 14 16 18 20 2 4 6

Explanation :
Testcase 1: 1 2 3 4 5  when rotated by 2 elements, it becomes 3 4 5 1 2.

HINT:
 
 1. Reversal of array concept might be useful here
 2.reverse(a, a+d) Reverse array from beginning till D
reverse(a+d, a+n) Reverse array from D till N
reverse(a, a+n) Reverse the whole array


CODE: EXECUTION TIME -0.26

#include <stdio.h>

int main() 
{
     int t;
     scanf("%d",&t);
     int n,r,i,j;
     while(t--)
     {
         scanf("%d%d",&n,&r);
         int a[n];
         for(i=0;i<n;i++)
         {
             scanf("%d",&a[i]);
         }
         for(i=r;i<n;i++)
         {
             printf("%d ",a[i]);
         }
         for(i=0;i<r;i++)
         {
             printf("%d ",a[i]);
         }
         printf("\n");
     }
	return 0;
}
c++:
#include <iostream>
using namespace std;

using namespace std;

void swap(int &x,int &y)
{
    int temp=x;
    x=y;
    y=temp;
}

void reverse(int arr[],int l,int r)
{
    while(l<r)
    {
        swap(arr[l],arr[r]);
       // cout<<arr[l]<<arr[r]<<"\n";
        l++;  r--;
    }
    
}

int main()
{
    int t,n,d;
    cin>>t;
    while (t--)
    {
        cin>>n>>d;
        int arr[n];
        for (int i=0; i<n; i++)  cin>>arr[i];
        reverse(arr,0,d-1);
        reverse(arr,d,n-1);
        reverse(arr,0,n-1);
        for (int i=0; i<n; i++) cout<<arr[i]<<" ";
        cout<<"\n";
    }
	return 0;
}
C++;
#include<bits/stdc++.h>
using namespace std;

long long a[10000000];

void rotateArr(long long d, long long n){
    
    reverse(a, a+d);
    reverse(a+d, a+n);
    reverse(a, a+n);
    
}


int main() {
	//code
	
	long long t;
	cin >> t;
	
	while(t--){
	    long long n, d;
	    cin >> n >> d;
	    
	    for(long long i = 0; i < n; i++){
	        cin >> a[i];
	    }
	    
	    rotateArr(d,n);
	    
	    for(long long i =0;i<n;i++){
	        cout << a[i] << " ";
	    }
	    cout << endl;
	    
	}
	
	return 0;
}
 



JAVA:
import java.util.*;
import java.lang.*;
import java.io.*;

class GFG
 {
	public static void main (String[] args)
	 {
	         Scanner in = new Scanner(System.in);
	         int test = in.nextInt();
	         while(test-->0)
	         {
	             int N = in.nextInt();
	             int D = in.nextInt();
	             int a[]= new int[N];
	             for(int i=0; i<N; i++)
	             {
	                a[i] = in.nextInt();
	             }
	             StringBuffer s = new StringBuffer();
	             for(int i=D; i<N; i++ )
	             {
	                 s.append(a[i]+" ");
	             }
	             for(int i=0;i<D;i++)
	             {
	                 s.append(a[i]+" ");
	             }
	             System.out.println(s);
	         }
	 }
}
 
