Print all pairs (sets) of prime numbers (p,q) such that p*q <= n, where n is given number.

Input:
The first line of input contains an integer T denoting the number of test cases. T testcases follow.
The first line of each test case is N.

Output:
For each testcase, in a new line, print the all pairs of prime numbers in increasing order.

Constraints:
1 ≤ T ≤ 50
4 ≤ N ≤ 400

Example:
Input:
2
4
8
Output:
2 2
2 2 2 3 3 2

Explanation:
Testcase 1: Pair (2, 2) which has both prime numbers as well as satisfying the condition 2*2 <= 4.
 code1:
 without extra memory
 #include<math.h>
#include<stdio.h>
#include<stdbool.h>

int  prime(int x)// to check whether it is prime or not
{
    int flag=0;
    for(int l=2;l<=sqrt(x);l++)
    {
        if(x%l==0)
        {
            flag=1;
            break;
        }
    }
    if(flag==0)
    return 1;
    else
    return 0;
}

int main() 
{
    int t;
    scanf("%d",&t);
    int n,p,q,i,j,k,flag=0;
    while(t--)
    {
        scanf("%d",&n);
        
            for(i=2;i<=n/2;i++)// RUNNING THE LOOP TILL N/2 GIVES THE NUMBERS (MULTIPLE OF PRIME NUMBERS WHICH IS LESS THAN OR EQAUL TO N)
            {
                for(j=2;j<=n/2;j++)// RUNNING THE LOOP TILL N/2 GIVES THE NUMBERS (MULTIPLE OF PRIME NUMBERS WHICH IS LESS THAN OR EQAUL TO N
                {
                    int p=i;
                    int q=j;
                   int r1=prime(i);
                   int r2=prime(j);
                   if(r1==1 && r2==1 && p*q<=n)// IF BOTH R 1 AND R2 ARE PRIME THEN MULTIPLY AND SEE WHETHER IT IS LESS THAN OR EQUAL TON
                   printf("%d %d ",p,q);
                  
                }
                
                
            }
            printf("\n");
        
    }
	return 0;
}


CODE 2:


#include <stdio.h>

int main() 
{
     int t;
     scanf("%d",&t);
     int n,i,j;
     while(t--)
     {
         scanf("%d",&n);
         int a[n],b[n];
         for(i=2;i<=n;i++)
         {
             a[i]=1;
         }
         for(i=2;i<=n;i++)
         {
             for(j=i;i*j<=n;j++)
             {
                 a[i*j]=0;
             }
         }
         int k=0;
         for(i=2;i<=n;i++)
         {
             if(a[i])
             {
                 b[k++]=i;
                 
             }
         }
         for(i=0;i<k;i++)
         {
             for(j=0;j<k;j++)
             {
                 if(b[i]*b[j]<=n)
                 {
                     printf("%d %d ",b[i],b[j]);
                 }
             }
         }
         printf("\n");
     }
	return 0;
}
