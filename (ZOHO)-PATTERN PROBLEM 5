An odd length string S is passed as the input. 
The program must print the pattern as described below.
Let L be the length of the string and M denote the middle position of the string S. 
The characters in the string are a(1),...., a(M), .... a(L).-
The first line will contain the middle letter a(M) of S in the extreme right.- 
Then in each subsequent line, the letters after the middle letter from a(M+1) to a(L) is appended to the line output.-
After the end of the string a(L) is reached, in each subsequent line, the letters from the beginning to the middle letter,
a(1) to a(M-1) are appended to the line output.
Note: Asterisk * will be used to pad in the front so that each line has L characters
Input Format:The first line will contain S.Output Format:L lines as output where L is the length of the string S.
Boundary Conditions:3 <= L <= 1001Example Input/Output 1
:
Input:CRY
Output:
**R
*RY
RYC
Example 
Input/Output 2:
Input:PROGRAM
Output:
******G
*****GR
****GRA
***GRAM
**GRAMP
*GRAMPR
GRAMPRO

MY LOGIC:
  0123456
0 ******
1 *****
2 ****
3 ***
4 **
5 *
for(i=l-1;i>=0;i--)// THIS ESTIMATES HOW MANY TIMES ITS GOING TO BE PRINTED AND RUN 
{  
for(j=0;j<=i-1;j++)// THIS ESTIMATES HOW MANY TIMES * WILL BE PRINTED 
{
printf("*");
} 
}

 0123456
0      G
1     GR
2    GRA
3   GRAM
4  GRAMP
5 GRAMPR
6GRAMPRO

 for(i=l-1;i>=0;i--)// THIS ESTIMATES HOW MANY TIMES ITS GOING TO BE PRINTED AND RUN 
{  
for(j=(i);j<l;j++)// THIS IS FOR PRINTING LETTERS 
{ 
printf("%c",s[h]);
h++; // THIS PRINTS FROM H=M(MIDDLE LETTER) TILL LAST LETTER (FROM G TP M (ie) GRAM) IF H EXCEEDS OR EQUAL TO L --> H BECOMES 0
if(h>=l)// IT IS USED TO CHECK AND PRINT FROM STARTING (IE) P PR PRO
{ 
h=0; 
} 
}

CODE:
#include<stdio.h>
#include <stdlib.h>
int main()
{ 
char s[1001];
scanf("%s",s);
int l=strlen(s),i,j; 
int m=l/2,k; 


for(i=l-1;i>=0;i--)// THIS ESTIMATES HOW MANY TIMES ITS GOING TO BE PRINTED AND RUN 
{  
for(j=0;j<=i-1;j++)// THIS ESTIMATES HOW MANY TIMES * WILL BE PRINTED 
{
printf("*");
} 
int h=m; 
for(j=(i);j<l;j++)// THIS IS FOR PRINTING LETTERS 
{ 
printf("%c",s[h]);
h++; // THIS PRINTS FROM H=M(MIDDLE LETTER) TILL LAST LETTER (FROM G TP M (ie) GRAM) IF H EXCEEDS OR EQUAL TO L --> H BECOMES 0
if(h>=l)// IT IS USED TO CHECK AND PRINT FROM STARTING (IE) P PR PRO
{ 
h=0; 
} 
}
printf("\n");
}
}
OR

#include "stdio.h"
int main() {
  char s[100],a[100];
  scanf("%s",&s);
  int len,mid,k=0;
  len=strlen(s);
  mid=len/2;
  for(int i=mid;i<strlen(s);i++)
    a[k++]=s[i];
  for(int i=0;i<mid;i++)
    a[k++]=s[i];
  
  for(int i=0;i<strlen(s);i++)
  {
    k=0;
    for(int j=0;j<strlen(s);j++)
    {
      if(j<len-1)
        printf("*");
      if(j>=len-1)
        printf("%c",a[k++]);
    }
    len--;
    printf("\n");
  }
  return 0;
}




OR





CODE:(THISCODE WAS TAKEN FROM OTHER LINKS FOR MY FUTURE REFERENCE)

#include<stdio.h>
#include<string.h>
int main()
{
    int i,j,k,x=0;
    char str[1001];
    scanf("%s",str);
    int len=strlen(str);
    int mid=len/2;
        for(i=len;i>0;i--)
        {
            for(j=0;j<i;j++)
            {
            if(x+j<=len-2)
                printf("* ");
              
            for(k=0;k<=x;k++)
            {
                 if(x+j>len-2&&x+j<=len)
                 {
                   if(mid+k>len-1)
                   {
                    printf("%c ",str[(mid+k)-len]);
                    }
                else
                {
                printf("%c ",str[mid+k]);
                }
            }
            }
            printf("\n");
            x++;
        }
    return 0;
or
*question:
Input: PROGRAM
Output:
              G
            GR
          GRA
       GRAM
     GRAMP
   GRAMPR
GRAMPRO
*/
#include<stdio.h>
#include<string.h>
int main()
{
    char s[1000];
    scanf("%s",s);
    int l=strlen(s),i,j;
    int m=l/2,h=l/2;
    for(i=l-1;i>=0;i--)
    {
        for(j=0;j<i;j++)
        {
            printf(" ");
        }
        h=m;
        for(j=i;j<l;j++)
        {
            printf("%c",s[h]);
            h++;
            if(h>=l)
            h=0;
        }
        printf("\n");
    }
}
