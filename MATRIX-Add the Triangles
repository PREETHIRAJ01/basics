Given a matrix of size N X N, where N is odd. The task is to find the maximum sum out of all the triangles formed in the matrix as shown below:
Matrix:
1 2 3
4 5 6
7 8 9

Upper Triangle:
1 2 3
   5

Left Triangle:
1
4 5
7

Lower Triangle:
   5
7 8 9

Right Triangle:
   3
5 6
   9

Sum of all triangles up, left , low and right are as 11, 17, 29, 23 respectively. Maximum of all these is 29.

Constraints:
1 <= T <= 100
1 <= N <= 1000
1 <= Mat[i][j] <= 106

Example:
Input:
1
3
1 1 1
1 1 1
1 1 1

Output:
4

Explanation:
Testcase 1: Sum of all triangles are 4, 4, 4, 4 respectively. Maximum of all the sum is 4.




code:(0.03)
#include<stdio.h>

int main()
{
    int t;
    scanf("%d",&t);
    int n;
    while(t--)
    {
        scanf("%d",&n);
        int a[n][n],i,j;
        int k=0,l=0,m=n-1,e=n-1;
        int sum1=0,sum2=0,sum3=0,sum4=0;
        int n1,n2,n3;
        for(i=0;i<n;i++)
        {
            for(j=0;j<n;j++)
            {
                scanf("%d",&a[i][j]);
            }
        }
        while(l<=e && k<=m)
        {
        for(i=l;i<=e;i++)
        {
            sum1=sum1+a[k][i];
            sum4=sum4+a[m][i];
        }
        for(i=k;i<=m;i++)
        {
            sum2=sum2+a[i][l];
            sum3=sum3+a[i][e];
        }
        k++;
        l++;
        e--;
        m--;
        }
        n1=sum1>sum2?sum1:sum2;
        n2=sum3>sum4?sum3:sum4;
        n3=n1>n2?n1:n2;
        printf("%d\n",n3);
    }
}
