Given a string S, Check if characters of the given string can be rearranged to form a palindrome. 
For example characters of “geeksogeeks” can be rearranged to form a palindrome “geeksoskeeg”,
but characters of “geeksforgeeks” cannot be rearranged to form a palindrome.

Input:
First line consists of integer T  denoting the number of test cases.
T testcases follow. For each testcase there are one line of input containing string S.

Output:
For each testcase, in a new line, print "Yes" if is possible to make it a palindrome, else "No".

Constraints:
1 <= T <= 100
1 <= |S| <= 1000

Example:
Input:
2
geeksogeeks
geeksforgeeks
Output:
Yes
No



Create a count array of alphabet size which is typically 26. Initialize all values of count array as 0.
Traverse the given string and increment count of every character.
Traverse the count array and if the count array has more than one odd values, return false. Otherwise return true.


code:
#include <stdio.h>
#include<string.h>
int main() 
{
    int t;
    scanf("%d",&t);
    while(t--)
    {
        char s[1000];
        scanf("%s",s);
        int a[26]={0},count=0,i,odd=0;
        for(i=0;i<strlen(s);i++)
        {
            a[s[i]-97]++;
        }
        for(i=0;i<26;i++)
        {
            
            if(a[i]%2!=0)
            {
                odd++;
            }
            
        }
        
        
        if(odd>1)
        printf("No\n");
        else
        printf("Yes\n");
        
        
    }
	return 0;
}
