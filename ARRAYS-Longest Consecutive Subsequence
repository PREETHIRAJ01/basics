Given an array A of integers.
The task is to complete the function which returns an integer denoting the length of the longest sub-sequence such that elements 
in the sub-sequence are consecutive integers, the consecutive numbers can be in any order.

Input:
The first line of input contains an integer T denoting the no of test cases. 
Then T test cases follow. Each test case contains an integer N. Then in the next line are N space separated values of the array A.

Output:
For each test case in a new line output will be the length of the longest consecutive increasing sub-sequence present in the array A[ ].

Constraints:
1 <= T <= 100
1 <= N <= 10^6
1 <= Ai <= 10^8

Example(To be used only for expected output):
Input:
2
7
1 9 3 10 4 20 2
11
36 41 56 35 44 33 34 92 43 32 42
Output:
4
5

Explanation:
Testcase 1: Logest consecutive subsequence is 1, 2, 3, 4 of length 4.


hint:
--->don't store duplicates .. store only one instance of a[i] as:
ex. 22 22 23 23 24 24 
   output 2



code:
#include <bits/stdc++.h>
using namespace std;
int findLongestConseqSubseq(int [], int );
int main() {
	int t;
	cin>>t;
	
	while(t--)
	{
		int n;
		cin>>n;
		
		int a[n];
		
		// input array elements
		for(int i=0;i<n;i++)
		    cin>>a[i];
		
		cout<< findLongestConseqSubseq(a, n)<<endl;
		
	}
	return 0;
}
}
/*This is a function problem.You only need to complete the function given below*/

// function to find longest consecutive subsequence
// n : size of array
// arr[] : input array
int findLongestConseqSubseq(int arr[], int n)
{
    int temp;
    for(int i=0;i<n;i++)
    {
        for(int j=i+1;j<n;j++)
        {
            if(arr[i]>arr[j])
            {
                temp=arr[i];
                arr[i]=arr[j];
                arr[j]=temp;
            }
        }
    }
    int count=1,max=0;
    for(int i=0;i<n;i++)
    {
        if(arr[i]==arr[i+1])
        {
            continue;
        }
         if((arr[i]+1)==(arr[i+1]))
         {
            count++; 
          
            
         }
         else
         {
             count=1;
         }
           if(count>max)
         {
             max=count;
         }
         
    }
    return max;
   
}

--------------------------------------------------------------------
                                          (or)
                                          
  int findLongestConseqSubseq(int arr[], int n)
{
    int temp;
    for(int i=0;i<n;i++)
    {
        for(int j=i+1;j<n;j++)
        {
            if(arr[i]>arr[j])
            {
                temp=arr[i];
                arr[i]=arr[j];
                arr[j]=temp;
            }
        }
    }
    int count=1,max=1;
    for(int i=0;i<n;i++)
    {
        if(arr[i]==arr[i+1])
        {
            continue;
        }
         if((arr[i]+1)==(arr[i+1]))
         {
            count++; 
            if(count>max)
         {
             max=count;
         }
            
         }
         else
         {
             count=1;
         }
         
         
    }
    return max;
   
}
