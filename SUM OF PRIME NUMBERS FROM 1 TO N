Given a positive integer N, calculate the sum of all prime numbers between 1 and N(inclusive).

Input:
The first line of input contains an integer T denoting the number of test cases. 
T testcases follow. Each testcase contains one line of input containing N.

Output:
For each testcase, in a new line, print the sum of all prime numbers between 1 and N.

Constraints:
1 ≤ T ≤ 100
1 ≤ N ≤ 106

Example:
Input:
2
5
10
Output:
10
17




code1:(using prime numbers using n/2)
#include<stdio.h>

int main()
{
    int t;
    scanf("%d",&t);
    int n;
    int i,j,flag=0,sum=0;
    while(t--)
    {
        
    scanf("%d",&n);
    sum=0;
    for(i=2;i<=n;i++)
    {   
        flag=0;
        for(j=2;j<=(i/2);j++)
        {
            if(i%j==0)
            {
                flag=1;
                break;
            }
        }
        if(flag==0)
        sum=sum+i;
    }
    printf("%d",sum);
    }
    
}
code 2:using sqrt
#include<stdio.h>
#include<math.h>

int main()
{
    int t;
    scanf("%d",&t);
    int n;
    int i,j,flag=0,sum=0;
    while(t--)
    {
        
    scanf("%d",&n);
    sum=0;
    for(i=2;i<=n;i++)
    {   
        flag=0;
        for(j=2;j<=sqrt(i);j++)
        {
            if(i%j==0)
            {
                flag=1;
                break;
            }
        }
        if(flag==0)
        sum=sum+i;
    }
    printf("%d",sum);
    }
    
}

code;(EXECUTION TIME 0.72)  SIEVE OF ERATOSTHENES
-------------------------------------------------
#include <stdio.h>

int main()
{
	long long int t;
	scanf("%lld",&t);
	long long int n,sum=0;
	while(t--)
	{
	    scanf("%lld",&n);
	    long long int a[n],i,j;
	for(i=2;i<=n;i++)// MARKING ALL THE NUMBERS TO 1
	    {
	        a[i]=1;
	    }
	    for(i=2;i<=n;i++)// IF WE PUT SQUARE ROOT(N) HERE TIME COMPLEXITY REDUCES HERE
	    {
	        for(j=i;i*j<=n;j++)
	        {
	            a[i*j]=0;// IF IT IS A MULTIPLE OF PRIME NUMBER, MARKING IT TO 0
	        }
	    }
	    for(i=2;i<=n;i++)
	    {
	        if(a[i])// IF 1 IS MARKED THEN IT IS PRIME AND ADD IT TO THE SUM
	        {
	            sum=sum+i;
	        }
	    }
	    printf("%lld\n",sum);
	    sum=0;
	}
	return 0;
}
