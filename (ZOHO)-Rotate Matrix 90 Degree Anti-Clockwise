A MxN matrix is passed as the input. 
The program must rotate the matrix by 90 degrees in anti-clock wise direction and 
print the rotated matrix as the output
.Input Format:First line will contain the value of M.
Second line will contain the value of N.
Next M lines will contain the N values with each value separated by one or more space.
Output Format:N lines will contain the M values with each value separated by one or more space.
Boundary Conditions:
2 <= M <= 152 <= N <= 15
Example Input/Output 1:
Input:
2
3
4 5 9
1 3 5
Output:
9 5
5 3
4 1
Example Input/Output 2:
Input:
4
4
1 2 3 4
5 6 7 8
9 10 11 12
13 14 15 16
Output:
4 8 12 16
3 7 11 15
2 6 10 14
1 5 9 13
Max Execution Time Limit: 5000 millisecs




#include<stdio.h>
#include <stdlib.h>
int main()
{ 
int r,c; 
scanf("%d\n%d",&r,&c);
int a[r][c],i,j; 
For(i=0;i<r;i++) 
{ 
for(j=0;j<c;j++)
{
scanf("%d",&a[i][j]);
}
}
for(j=c-1;j>=0;j--)
{
for(i=0;i<r;i++) 
{ 
printf("%d",a[i][j]); 
}
printf("\n"); 
}
}


OR
#include <stdio.h>
#include <stdlib.h>
int main()
{
int M,N;
scanf("%d%d",&M,&N);
int matrix[M][N]; 
int row,col; 
for(row=0; row<M; row++) 
{
for(col=0; col<N; col++)
{ 
scanf("%d",&matrix[row][col]);
}
}
//Now rotate int rotatedmatrix[N][M];
for(row=0; row<M; row++)
{ for(col=0; col<N; col++)
{ 
rotatedmatrix[N-1-col][row] = matrix[row][col]; 
}
}
//Print the rotated matrix 
for(row=0; row<N; row++) 
{
for(col=0; col<M; col++)
{ 
printf("%d ",rotatedmatrix[row][col]); 
}
printf("\n"); 
}
}
