
Given an array A[], Your task is to complete the function printDuplicates which prints the duplicate elements of the given array.
If no duplicate element is found  print -1.

Note: Auxiliary Space must be O(1) and Time complexity must be O(n).

Input:
The first line of input contains an integer T denoting the no of test cases. 
Then T test cases follow. Each test case contains an integer N which denotes number of elements of Array. Second line of each test case contains N space separated integers denoting elements of Array A[].

Output:
Print the duplicate elements from the array.
The order of the output should be as the element found to be repeated.

Constraints:
1<=T<=100
1<=N<=50
0<=A[]

Example:
Input:
2
4
0 3 1 2
5
2 3 1 2 3 
Output:
-1
2 3 



code:
{
#include <bits/stdc++.h>
using namespace std;
void printDuplicates(int arr[], int n);
int main()
{
  int t;
  cin>>t;
  while(t-- > 0){
		int n;
		cin>>n;
		int a[n];
		for(int i=0;i<n;i++)
			cin>>a[i];
		printDuplicates(a, n);
		cout<<endl;
  }
  return 0;
}
}
/*This is a function problem.You only need to complete the function given below*/
/*Complete the function below*/
void printDuplicates(int arr[], int n)
{
   int i,j,f=0,l=0;
   for(i=0;i<n;i++)
   {
       f=0;
       for(j=i;j>=0;j--)
       {
           if(arr[i]==arr[j])
           {
               f=f+1;
               l++;// this is to not collapse with arrays without duplicates and arrays having duplicates and also distinct
           }
       }
       if(f==2)
       {
          
          printf("%d ",arr[i]); 
       }
       
       
   }
   
   if(f==1 && l==n)
   {
       printf("-1");
   }
   
}

very simple solution usig frequency array:
void printDuplicates(int arr[], int n)
{
         
         int c = 0,i;
            int max =arr[0];
            for(i=1;i<n;i++)// to find the maximum element and storing in the max to find size for frequency array
              {  
              if(arr[i]>=max)
                    max=arr[i];
              }
           int b[max+1] = {0};
           for(i = 0;i<n;i++)
           {
               b[arr[i]] += 1;// frequency array gets incremented once the elemet is seen
               if(b[arr[i]]==2)
               {
                   c=1;
                   cout<<arr[i]<<" ";
               }
           }
           if(c==0)
           cout<<"-1";
          // System.out.println();
       }


ANOTHER CODE:




void printDuplicates(int arr[], int n)
{
    int c = 1;
for(int i = 0; i < n; i++)
{
int ind = arr[i] % n;
arr[ind] += n;

if(arr[ind]/n == 2)
{
cout << ind << " ";
c = 0;

}
}

if(c)
cout << "-1";
}
OR
void printDuplicates(int arr[], int n)
{
    int f=0;
   for(int i=0;i<n;i++)
   {
       int index=arr[i]%n;
      if(arr[index]>=n)
      {
          if(arr[index]<(2*n))
          {
              cout<<index<<" ";
              f=1;
          }
      }
      arr[index]+=n;
   }
   
   
   
if(f==0)
cout<<-1;


}
