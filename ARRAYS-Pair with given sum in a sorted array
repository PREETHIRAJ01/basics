You are given an array A of size N. You need to find all pairs in the array that sum to a number K. 
If no such pair exists then output will be -1. The elements of the array are distinct and are in sorted order.
Note: (a,b) and (b,a) are considered same. Also, an element cannot pair with itself, i.e., (a,a) is invalid.

Input:
The first line of input is T denoting the number of testcase. T testcases follow.
Each testcase contains three lines of input. The first line is the size of array N. 
The second line contains N elements separated by spaces. The third line contains the sum K.

Output:
For each testcase, print all the pairs such that there sum is equal to K.

Constraints:
1 <= T <= 100
0 <= Ai <=10^7
2 <= N <= 10^7
0 <= K <= 10^7

Examples:
Input:
2
7
1 2 3 4 5 6 7
98
7
1 2 3 4 5 6 7
8
Output:
-1
1 7 8
2 6 8
3 5 8

Explanation:
Testcase1: We cannot find any pair that sums to 98
Testcase2: We find 3 such pairs that sum to 8 (1,7) (2,6) (3,5)


You can take advantage of the fact that the "A" array is already sorted by using the Two Pointer approach.

1. Let the "left element" be at index 0 and let the "right element" be at index n-1.
2. Take the sum of the left element and the right element.
3. If their sum is less than "K", increase the index of the left element by 1.
4. Else... if their sum is greater than "K", decrease the index of the right element by 1.
5. Else... if their sum equals "K", print the pair and "K" in ascending order then increment the index of the left element by 1.
6. Repeat steps 2-5 until the left index equals the right index.
7. Print "-1" if no pairs were found that sum to "K".


code:(this is called two pointer method)

#include<stdio.h>

int main()
{
    int t;
    scanf("%d",&t);
    int n,i,j;
    while(t--)
    {
        scanf("%d",&n);
        int a[n],value,flag=0;
        for(i=0;i<n;i++)
        {
            scanf("%d",&a[i]);
        }
        scanf("%d",&value);
        for(i=0,j=n-1;i<j;)
        {
            if(a[i]+a[j]==value)
            {
                printf("%d %d %d\n",a[i],a[j],value);
                i++;
                j--;
                flag=1;
            }
       
            else if(a[i]+a[j]<value)
            {
               i++; 
            }
            else if(a[i]+a[j]>value)
            {
                j--;
            }
        }
        if(flag==0)
        {
            printf("-1\n");
            }
            
            
      }
      }
      
      
      or
      
      
      
      #include <stdio.h>

int main()
{
    long long int t;
    scanf("%lld",&t);
    while(t--)
    {
    long long int n;
    scanf("%lld",&n);
    long long int a[n],i,j,result,flag=0;
    for(i=0;i<n;i++)
    {
        scanf("%lld",&a[i]);
    }
    scanf("%lld",&result);
    int max=result,pos;
    for(i=n-1;i>=0;i--)
    {
      if(a[i]<=max) //since its a sorted array finding the element which is equal to the result or the first nearest number
      {
          max=a[i];
          pos=i;
          break;
      }
    }
    flag=0;
    for(i=0,j=pos;i<j;)
    {
           if(a[i]+a[j]==result)
           {
               printf("%lld %lld %lld\n",a[i],a[j],result);
               flag=1;
               i++;
               j--;
           }
           if(a[i]+a[j]>result)
           {
               
               j--;
           }
           if(a[i]+a[j]<result)
           {
               
               i++;
           }
    }
    
    if(flag==0)
    {
        printf("-1\n");
    }
    }
    
	return 0;
}   
